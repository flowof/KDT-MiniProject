<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/workspace2021/sqlite/sampleDB.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="1129"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="0"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,15:mainsqlite_sequence"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="albums" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="66"/><column index="2" value="300"/><column index="3" value="59"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- 특정 테이블의 전체 레코드 확인
-- SELECT * FROM 테이블명
-- 특정 테이블의 전체 레코드 확인
-- SELECT * FROM 테이블명

-- SELECT * FROM artists;

-- 특정 테이블의 특정 컬럼의 레코드 확인
-- SELECT 필드명1, 필드명2... FROM 테이블명

-- SELECT EmployeeId, LastName, FirstName FROM employees;

-- 특정 테이블에서 레코드수 제한하여 출력하기
-- SELECT * FROM 테이블명 LIMIT 숫자;
-- SELECT 필드명1, 필드명2 FROM 테이블명 LIMIT 숫자;

-- CUSTOMERS 테이블에서 5개의 레코드 보기
-- SELECT * FROM customers LIMIT 5;
-- -- 전체 레코드 갯수 
-- ) FROM customers; -- 59 
-- 
-- SELECT CustomerId, City FROM customers LIMIT 5;

-- WHERE 조건절
--  = , &lt;=, &gt;=, &lt;, &gt; 비교연산자
--   AND, OR, NOT 논리연산자 

-- SELECT 필드명 FROM 테이블명 WHERE 조건절 ;

-- 예) customers 테이블에서 CustomerId 가 10인 레코드 보기
--      WHERE customerId = 10;
-- 	  
-- 	  
-- customers 테이블에서 CustomerId 가 10 이거나 30 인 레코드 보기      
      
-- SELECT * 
--       FROM customers
--       WHERE customerId = 10 OR customerId = 30;      

-- 예) PLAYLISTS 테이블에서 PlaylistId가 5보다 큰 레코드 보기
-- SELECT * FROM playlists
--    WHERE playlistId &gt; 5;
   
   
-- PLAYLISTS 테이블에서 PlaylistId가 5보다 크고 10보다 작은 레코드 보기
-- SELECT * 
--    FROM playlists
--    WHERE (playlistId &gt; 5) AND (PlaylistId &lt; 10);   
   
   
-- PLAYLISTS 테이블에서 PlaylistId가 5보다 크고 10보다 작은 레코드 보기
-- SELECT * 
--    FROM playlists
--    WHERE (playlistId &gt; 5) AND (PlaylistId &lt; 10)
--    LIMIT 2;
   
-- 특정 컬럼을 기준으로 정렬하기
--SELECT * FROM 테이블명
--            WHERE 조건절
--            ORDER BY 컬럼명1, 컬럼명2 ASC/DESC
--            LIMIT 숫자;
--ASC : 오름차순 / DESC : 내림차순


-- WHERE 필드명 LIKE %서식 == *
--   예) 'a%' : a로 시작하는 
-- WHERE 필드명 LIKE _서식 _글자수
--    예) 'U__' : U로 시작하고 U뒤의 글자수가 2글자 

--          WHERE country LIKE 'U%';
		 
		 
-- 예) customers 테이블에서 country 필드값이 U로 시작하고 A로 끝나는 레코드만 출력해라   
-- SELECT * FROM customers
--          WHERE country LIKE 'U%A';
		 
		 
-- A로 시작하는   
-- SELECT * FROM customers
--          WHERE country LIKE 'A%';   



-- A로 시작하고 뒷자릿수가 6글자인 레코드만 출력    
-- SELECT * FROM customers
--          WHERE country LIKE 'A______';    


--CREATE TABLE 테이블명 (필드명 자료형 옵션 ....);
-- CREATE TABLE student ( 
-- 	id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, --기본키, 숫자자동증감
-- L,
-- 	age INTEGER NOT NULL,
-- 	addr TEXT DEFAULT &quot;서울&quot;
--  

-- SELECT count(*) FROM student;       


-- 테이블에 레코드 추가하기
-- INSERT INTO 테이블명 (컬럼1, 컬럼2...)  VALUES (값1, 값2 ...);
-- 필드가 AUTOINCREMENT 라면 NULL로 데이터 입력

-- INSERT INTO student (name, age, addr) VALUES(&quot;박민주&quot;, 23, &quot;부산&quot;);
-- O student (name, age, addr) VALUES(&quot;백승호&quot;, 25, &quot;전북&quot;);
-- O student (name, age) VALUES(&quot;장윤호&quot;, 26);
SELECT INTO student VALUES(NULL, &quot;신유빈&quot;, 18, &quot;대전&quot;)
-- SELECT * FROM student;









</sql><current_tab id="0"/></tab_sql></sqlb_project>
